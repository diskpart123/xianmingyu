# -*- coding: utf-8 -*-
# @Time    : 2020/01/24 10:43
# @Author  : xianming yu
# @File    : 2面相对象基础语法.py

"""
目标
    dir 内置函数
    定义简单的类(只包含方法)
    方法中的self参数
    初始化方法
    内置方法和属性
"""
"""
i1.dir内置函数(知道)
    在Python中对象几乎是无所不在的,我们之前学习的变量,数据,函数都是对象
    在python中可以使用以下两个方法验证:
        1.在标识符/数据后输入一个.然后按下TAB键,ipython会提示该对象能够调用的方法列表
        2.使用内置函数dir传入标识符/数据,可以查看对象内的所有属性及方法
        提示:__方法名__,格式的方法是python提供的内置方法/属性,稍后会给大家介绍一些常用的内置方法/属性
        序号              方法名             类型              作用
        01              __new__             方法              创建对象时会被自动调用
        02              __init__            方法              对象初始化时,会被自动调用
        03              __del__             方法              对象被从内存中销毁前,会被自动调用
        04              __str__             方法              返回对象的描述信息,print函数输出使用 
        def test():
            (前面三个引号)你好这是一个测试案例(后面三个引号)
            print("你好,python")
        print(dir(test)) # 可以查看对象内的所有属性及方法
        print(test.__doc__) #查看test函数下的文档备注    
    提示:利用好dir()函数,在学习时很多内容就不需要死记硬背
i2.定义简单的类(只包含方法)
    注释:面向对象是更大的封装,在一个类中封装多个方法,这样通过这个类创建出来的对象,就可以直接调用这些方法了!
    i2.1 定义只包含方法的类
        i2.1.1 在python中要定义一个只包含方法的类,语法格式如下:
            class 类名():
                def 方法1(self,参数列表):
                    pass
                def 方法2(self,参数列表):
                    pass
        i2.1.2 方法的定义格式和之前学习的函数几乎一样,区别在于第一个参数必须是self,大家暂时记住,稍后记住self
                注意点:类名的命名规则,要符合大驼峰命名法
    i2.2 创建对象
        i2.2.1 当一个类定义完成之后,要使用这个类来创建对象,语法格式如下:
            对象变量=类名()
    i2.3 第一个面向对象程序
        需求如下:
            小猫爱吃鱼,小猫爱喝水
        分析
            1.定义一个猫类Cat
            2.定义两个方法eat和drink
            3.按需求---不需要定义属性
        代码如下:
            class Cat:
                def eat(self):
                    print("小猫爱吃鱼")
                def drink(self):
                    print("小猫爱喝水")
            #创建猫对象
            tom=Cat()
            #对象调用类中两个的方法
            tom.eat()
            tom.drink()
        i2.4 "引用"概念的强调
            注释:在面向对象开发当中,"引用"的概念是同样适用的!
            i2.4.1 在python中使用类创建对象后,tom变量中仍然记录的是对象在内存中的地址,也就是tom变量引用了"新建的猫对象"
            i2.4.2 使用print输出对象变量,默认情况下,是能够输出这个变量引用的对象是由哪一个类创建的对象,以及在内存中的地址(输入的地址为十六进制表示)
                   tom=Cat()  #注释:等号(=)右侧的Cat()负责创建对象,等号(=)左侧tom变量负责对创建的对象进行引用
                   print(tom)
                   输入结果:
                    <__main__.Cat object at 0x0000020A620CDEB8>
                   提示:在计算机中,通常使用十六进制表示内存地址
                    十进制和十六进制都是用来表达数字的,只是表示的方式不一样
                    十进制和十六进制的数字之间可以来回转换 
            i2.4.3 %d可以以10进制输出数字,%x可以以16进制输出数字
                tom=Cat()   
                addr=id(tom)
                print("%d"%addr)
                输出结果:
                    2243617939128
                print("%x"%addr)
                输出结果:
                    20a620cdeb8
                        
                 
                     
"""

class Cat:
    def eat(self):
        print("小猫爱吃鱼")
    def drink(self):
        print("小猫爱喝水")
#创建猫对象
tom=Cat()
addr=id(tom)
print("%d"%addr)
print("%x"%addr)



#对象调用类中两个的方法

